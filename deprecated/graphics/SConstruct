env = Environment();

# Check if lilyUtilsAppend was correctly passed into this as an
# SConscript. This should just be the return value of the
# Lily-Engine-Utils SConscript call.
Import("lilyUtilsAppend");
Import("lilyToolsAppend");

includeDir = [Dir("./include")];

env.Append(CPPPATH=includeDir);

# Attempt to use FreeType2 if it's available.
try:
    env.ParseConfig("pkg-config freetype2 --libs --cflags");
    env.Append(CPPDEFINES={"-DEXPOP_USE_FREETYPE2":1});
except:
    pass;

# Preserve the environment as we have it now, because we'll return
# part of it at the end.
env2 = env.Clone();

env.Append(**lilyUtilsAppend);
env.Append(**lilyToolsAppend);

generatedSource = env.File("src/glcontext/glcontext_generated.cpp");
generatedHeader = env.File("include/lilyengine/glcontext_generated.h");
env.LilyGLContext(
    [generatedSource, generatedHeader],
    "src/glcontext/glfuncs.txt");

lilyGraphicsLib = env.Library(
    "lilyenginegraphics",
    ["src/font/font.cpp",
     "src/font/font_builtin2.cpp",
     "src/font/fontrenderer.cpp",
     "src/imagegl/imagegl.cpp",
     generatedSource,
     "src/glcontext/glcontext.cpp",
     "src/glutils.cpp"]);

# Looks like we need to do this to copy include files over.
env.Dir("include/lilyengine");

appendValues = {
    "LIBS":[lilyGraphicsLib, env2["LIBS"], "GL", "GLU"],
    "CPPPATH":[env2["CPPPATH"]]
};
Return("appendValues");
